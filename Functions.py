# Напишите функцию modify_list(l), которая принимает на вход список целых чисел, удаляет из него все нечётные значения, а чётные 
# нацело делит на два. Функция не должна ничего возвращать, требуется только изменение переданного списка.

def modify_list(l):
    for i in range(len(l)-1, -1, -1):
        if l[i] % 2 == 1:
            del l[i]
        else:
            l[i] = int(l[i]/2)

# Напишите функцию update_dictionary(d, key, value), которая принимает на вход словарь d и два числа: key и value. Если ключ key 
# есть в словаре d, то добавьте значение value в список, который хранится по этому ключу.  Если ключа key нет в словаре, то нужно 
# добавить значение в список по ключу 2⋅key. Если и ключа 2⋅key нет, то нужно добавить ключ 2⋅key в словарь и сопоставить ему список 
# из переданного элемента [value].

def update_dictionary(d, key, value):
    if key in d:
        d[key] += [value]
    elif 2*key in d:
        d[2*key] += [value]
    else:
        d[2*key] = [value]

# Напишите функцию f(x), которая возвращает значение следующей функции, определённой на всей числовой прямой:

def f(x):
    if x <= -2:
        result = 1 - (x + 2)**2
    elif x > 2:
        result = (x - 2)**2 + 1
    else:
        result = -(x/2)
    return(result)

# Задача на dictionaries 1

# Программа должна считывать одну строку со стандартного ввода и выводить для каждого уникального слова в этой строке число его 
# повторений (без учёта регистра) в формате "слово количество". Порядок вывода слов может быть произвольным, каждое уникальное 
# слово должно выводиться только один раз.

n = str(input()).lower().split()

d = {}
for i in n:
    d[i] = n.count(i)
for key, value in d.items():
    print(key, value)

# Задача на dictionaries 2

# Напишите программу, которой на вход в первой строке подаётся число n — количество значений x, для которых требуется узнать 
# значение функции f(x), после чего сами эти n значений, каждое на отдельной строке. Программа должна после каждого введённого 
# значения аргумента вывести соответствующие значения функции f на отдельной строке. Для ускорения вычисления необходимо сохранять 
# уже вычисленные значения функции при известных аргументах.

n = int(input())

c = 0
arr = []
while c < n:
    m = int(input())
    arr.append(m)
    c += 1
d = {}
for i in range(n):
    if arr[i] in d:
        continue
    else:
        d[arr[i]] = f(arr[i])

for i in arr:
    if i in d:
        print(d[i])